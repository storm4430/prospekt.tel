//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace prospekt.tel.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class psEnt : DbContext
    {
        public psEnt()
            : base("name=psEnt")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sex> sex { get; set; }
    
        public virtual ObjectResult<usp_GetAllCategories_Result> usp_GetAllCategories(string substr)
        {
            var substrParameter = substr != null ?
                new ObjectParameter("substr", substr) :
                new ObjectParameter("substr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllCategories_Result>("usp_GetAllCategories", substrParameter);
        }
    
        public virtual int usp_Ctegories_IU(Nullable<int> id, string category_desc, string createdBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var category_descParameter = category_desc != null ?
                new ObjectParameter("category_desc", category_desc) :
                new ObjectParameter("category_desc", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Ctegories_IU", idParameter, category_descParameter, createdByParameter);
        }
    
        public virtual int usp_Ctegories_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Ctegories_Delete", idParameter);
        }
    
        public virtual ObjectResult<usp_GetCategoryById_Result> usp_GetCategoryById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryById_Result>("usp_GetCategoryById", idParameter);
        }
    
        public virtual ObjectResult<usp_GetAllSubCategoriesByCategoryID_Result> usp_GetAllSubCategoriesByCategoryID(Nullable<int> catId, string substr)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("catId", catId) :
                new ObjectParameter("catId", typeof(int));
    
            var substrParameter = substr != null ?
                new ObjectParameter("substr", substr) :
                new ObjectParameter("substr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllSubCategoriesByCategoryID_Result>("usp_GetAllSubCategoriesByCategoryID", catIdParameter, substrParameter);
        }
    
        public virtual ObjectResult<usp_GetSubCategoryById_Result> usp_GetSubCategoryById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSubCategoryById_Result>("usp_GetSubCategoryById", idParameter);
        }
    
        public virtual int usp_SubCategories_IU(Nullable<int> id, Nullable<int> catId, string subcategory_desc, string createdBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("catId", catId) :
                new ObjectParameter("catId", typeof(int));
    
            var subcategory_descParameter = subcategory_desc != null ?
                new ObjectParameter("subcategory_desc", subcategory_desc) :
                new ObjectParameter("subcategory_desc", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SubCategories_IU", idParameter, catIdParameter, subcategory_descParameter, createdByParameter);
        }
    
        public virtual int usp_SubCategories_Delete(Nullable<int> id, string user)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SubCategories_Delete", idParameter, userParameter);
        }
    
        public virtual ObjectResult<usp_GetAllProducts_Result> usp_GetAllProducts(Nullable<int> scat, string substr)
        {
            var scatParameter = scat.HasValue ?
                new ObjectParameter("scat", scat) :
                new ObjectParameter("scat", typeof(int));
    
            var substrParameter = substr != null ?
                new ObjectParameter("substr", substr) :
                new ObjectParameter("substr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllProducts_Result>("usp_GetAllProducts", scatParameter, substrParameter);
        }
    }
}
